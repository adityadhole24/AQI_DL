# -*- coding: utf-8 -*-
"""Finetuning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j2asRQcT69s5tl0lI60qXoDA_Z3hZnEt
"""

from singlestep import *

from math import sqrt
import pandas as pd
import numpy as np
import pickle
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error
from keras.layers import Dense,LSTM,Bidirectional,BatchNormalization,Dropout,Conv1D,GRU,MaxPooling1D
from keras.models import Sequential,Model
from keras.engine.input_layer import Input
from keras.layers.merge import concatenate
from keras import optimizers
from keras.utils import plot_model
from keras.callbacks import History, ModelCheckpoint
from sklearn.preprocessing import MinMaxScaler

def main():
  n_input=6
  for i in range(0,10):
    filename='fm'+str(i)+'.sav'
    print('model'+str(i)+' loaded')
  
    model = pickle.load(open(filename, 'rb'))


    data_spatial=pd.read_csv('/content/Changpingpreproc.csv',header=0,parse_dates=True,index_col=[0])
    min=data_spatial['PM2.5'].min()
    max=data_spatial['PM2.5'].max()
    scaler = MinMaxScaler(feature_range=(0, 1))
    data_spatial = scaler.fit_transform(data_spatial)
    
    train,test=data_spatial[24*365*3:24*365*3+24*48],data_spatial[24*365*3+24*48:24*365*3+24*60]
    train=np.array(np.split(train,len(train)/24))
    test=np.array(np.split(test,len(test)/24))


    train_x,train_y=to_supervised(train,n_input,1)
    print(train_x.shape)
    print(train_y.shape)
    #for j in range(31,35):
    #  model.get_layer(index=i).trainable=False
    #model.compile(optimizer='adam',loss='mse')
    #history = fit_model(train_x,train_y,model,0,0)
    scores,final_score= model_eval(train,test,n_input,model,24,1)
    scores=[t*(max-min)+min for t in scores]
    print(scores)
    print(final_score*(max-min)+min)
    #os.remove('/content/best_weights0.hdf5')

if __name__=='__main__':
  main()

